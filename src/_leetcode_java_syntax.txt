---------- Data Structures ----------
***** Array *****
- init array
int[] <arr> = {1, 2, 3};
char[] <arr> = {'A', 'B', 'C'};

- print values
import java.util.Arrays;
System.out.println(Arrays.toString(<arr>);

- print nested values (NOTE: reference variables only)
System.out.println(Arrays.deepToString(<arr>);

- get length
<arr>.length
import java.util.Arrays;

- slice array
Arrays.copyOfRange(<arr>, startIndex, endIndex);
eg. {1, 2, 3, 4, 5}
  -> middle = <arr>.length / 2;
  -> copyOfRange(<arr>, 0, middle) = {1, 2};
  -> copyOfRange(<arr>, middle, <arr>.length) = {3, 4, 5};

***** HashSet *****
int size()
boolean isEmpty()
boolean add(E e)
boolean cointains(Obj o)
boolean remove(Obj o)
void clear()
T[] toArray(T[] a)

---------- Primitives and Conversions ----------
***** Char *****
- get alphabets
int offset = 65;
char[] alphabets = new int[26];
for (int i = 0; i < 26; i++) {
  alphabets[i] = (char) (i + offset);
}
***** Digits *****
int digit = Character.digit(Integer.toString(<num>).charAt(<idx>)), 10);
